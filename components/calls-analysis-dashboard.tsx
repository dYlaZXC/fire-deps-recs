"use client"

import { useState, useEffect } from 'react'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
import { Badge } from '@/components/ui/badge'
import { Button } from '@/components/ui/button'
import { ChartContainer } from '@/components/ui/chart'
import { 
  BarChart, 
  Bar, 
  XAxis, 
  YAxis, 
  CartesianGrid, 
  Tooltip, 
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell,
  LineChart,
  Line,
  Area,
  AreaChart
} from 'recharts'
import { 
  Flame, 
  Car, 
  Building, 
  TreePine, 
  HelpCircle, 
  AlertTriangle,
  MapPin,
  Calendar,
  Clock,
  Users,
  TrendingUp,
  FileText,
  Info
} from 'lucide-react'
import MapComponent from './map-component'

interface TransportIncident {
  id: number
  latitude: number
  longitude: number
  cause: string
  transport_type: string
  brand: string
  model: string
  year: string
  created_at: string
  was_fire: boolean
  injured: string
  deceased: string
}

interface BuildingIncident {
  id: number
  latitude: number
  longitude: number
  building_type: string
  cause: string
  floors: string
  damage_level: string
  created_at: string
  was_fire: boolean
  injured: string
  deceased: string
}

interface HelpIncident {
  id: number
  latitude: number
  longitude: number
  help_type: string
  location: string
  assistance_type: string
  created_at: string
  was_fire: boolean
  injured: string
  deceased: string
}

interface VigilanceIncident {
  id: number
  latitude: number
  longitude: number
  reason: string
  source: string
  district: string
  created_at: string
  was_fire: boolean
  injured: string
  deceased: string
}

interface DryGrassIncident {
  id: number
  latitude: number
  longitude: number
  grass_type: string
  location: string
  cause: string
  area: string
  created_at: string
  was_fire: boolean
  injured: string
  deceased: string
}

interface CallsData {
  general: {
    total: number
    withFire: number
    withInjuries: number
    withDeaths: number
    byCategory: Array<{ name: string; value: number }>
  }
  transport: {
    total: number
    withFire: number
    withInjuries: number
    withDeaths: number
    byType: Record<string, number>
    byBrand: Record<string, number>
    byYear: Record<string, number>
    byCause: Record<string, number>
    byRoute: Record<string, number>
    topTypes: Array<{ name: string; value: number }>
    topBrands: Array<{ name: string; value: number }>
    topYears: Array<{ name: string; value: number }>
    topCauses: Array<{ name: string; value: number }>
    topRoutes: Array<{ name: string; value: number }>
    ageRanges: Array<{ name: string; value: number }>
    seasonalData: Array<{ name: string; value: number }>
    timeOfDayData: Array<{ name: string; value: number }>
    hourlyData: Array<{ hour: number; value: number }>
    brandAgeData: Array<{ brand: string; avgAge: number; incidents: number }>
  }
  buildings: {
    total: number
    withFire: number
    withInjuries: number
    withDeaths: number
    byType: Record<string, number>
    byCause: Record<string, number>
    byFloors: Record<string, number>
    byDistrict: Record<string, number>
    timeOfDayData: Record<string, number>
    seasonalData: Record<string, number>
    hourlyData: Record<string, number>
    ageGroupsInjured: Record<string, number>
    damageLevel: Record<string, number>
  }
  dryGrass: {
    total: number
    withFire: number
    withInjuries: number
    withDeaths: number
    byType: Array<{ name: string; value: number }>
    byLocation: Array<{ name: string; value: number }>
    byCause: Array<{ name: string; value: number }>
    byDistrict: Array<{ name: string; value: number }>
    seasonalData: Array<{ name: string; value: number }>
    timeOfDayData: Array<{ name: string; value: number }>
    hourlyData: Array<{ hour: number; value: number }>
    monthlyData: Array<{ month: string; value: number }>
  }
  unconfirmed: {
    total: number
    withFire: number
    withInjuries: number
    withDeaths: number
    byReason: Array<{ name: string; value: number }>
    bySource: Array<{ name: string; value: number }>
    byDistrict: Array<{ name: string; value: number }>
    timeOfDayData: Array<{ name: string; value: number }>
    hourlyData: Array<{ hour: number; value: number }>
  }
  help: {
    total: number
    withFire: number
    withInjuries: number
    withDeaths: number
    byType: Array<{ name: string; value: number }>
    byLocation: Array<{ name: string; value: number }>
    byDistrict: Array<{ name: string; value: number }>
    timeOfDayData: Array<{ name: string; value: number }>
    hourlyData: Array<{ hour: number; value: number }>
  }
  categories: string[]
  rawData?: {
    transport: TransportIncident[]
    buildings: BuildingIncident[]
    help: HelpIncident[]
    vigilance: VigilanceIncident[]
    dryGrass: DryGrassIncident[]
  }
}

const COLORS = {
  fire: '#ef4444',
  transport: '#3b82f6',
  building: '#10b981',
  dryGrass: '#f59e0b',
  unconfirmed: '#8b5cf6',
  help: '#ec4899',
  warning: '#f59e0b', 
  success: '#22c55e',
  info: '#3b82f6',
  purple: '#8b5cf6',
  pink: '#ec4899',
  indigo: '#6366F1',
  gray: '#6B7280'
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
const transformToChartData = (obj: Record<string, number>) => {
  return Object.entries(obj).map(([name, value]) => ({ name, value }))
}

export default function CallsAnalysisDashboard() {
  const [data, setData] = useState<CallsData | null>(null)
  const [selectedCategory, setSelectedCategory] = useState<string>('–í—Å–µ –≤—ã–∑–æ–≤—ã')
  const [loading, setLoading] = useState(true)
  const [showMethodology, setShowMethodology] = useState(false)

  useEffect(() => {
    async function loadData() {
      try {
        const response = await fetch('/data/calls-analysis.json')
        const jsonData = await response.json()
        setData(jsonData)
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error)
      } finally {
        setLoading(false)
      }
    }

    loadData()
  }, [])

  const getCategoryIcon = (category: string) => {
    switch (category) {
      case '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç': return <Car className="w-5 h-5" />
      case '–ó–¥–∞–Ω–∏–µ': return <Building className="w-5 h-5" />
      case '–°—É—Ö–æ—Å—Ç–æ–π, –º—É—Å–æ—Ä': return <TreePine className="w-5 h-5" />
      case '–ë–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—Ä–∞–∂–¥–∞–Ω': return <AlertTriangle className="w-5 h-5" />
      case '–ü–æ–º–æ—â—å': return <HelpCircle className="w-5 h-5" />
      default: return <Flame className="w-5 h-5" />
    }
  }

  const getCategoryMetrics = (category: string) => {
    if (!data) return null
    
    switch (category) {
      case '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç':
        return {
          total: data.transport.total,
          withFire: data.transport.withFire,
          withInjuries: data.transport.withInjuries,
          withDeaths: data.transport.withDeaths
        }
      case '–ó–¥–∞–Ω–∏–µ':
        return {
          total: data.buildings.total,
          withFire: data.buildings.withFire,
          withInjuries: data.buildings.withInjuries,
          withDeaths: data.buildings.withDeaths
        }
      case '–°—É—Ö–æ—Å—Ç–æ–π, –º—É—Å–æ—Ä':
        return {
          total: data.dryGrass.total,
          withFire: data.dryGrass.withFire,
          withInjuries: data.dryGrass.withInjuries,
          withDeaths: data.dryGrass.withDeaths
        }
             case '–ë–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—Ä–∞–∂–¥–∞–Ω':
         return {
           total: data.unconfirmed.total,
           withFire: data.unconfirmed.withFire,
           withInjuries: data.unconfirmed.withInjuries,
           withDeaths: data.unconfirmed.withDeaths
         }
      case '–ü–æ–º–æ—â—å':
        return {
          total: data.help.total,
          withFire: data.help.withFire,
          withInjuries: data.help.withInjuries,
          withDeaths: data.help.withDeaths
        }
      default:
        return {
          total: data.general.total,
          withFire: data.general.withFire,
          withInjuries: data.general.withInjuries,
          withDeaths: data.general.withDeaths
        }
    }
  }

  if (loading) {
    return (
      <div className="flex items-center justify-center h-96">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–∞ –≤—ã–∑–æ–≤–æ–≤...</p>
        </div>
      </div>
    )
  }

  if (!data) {
    return (
      <div className="text-center py-8">
        <AlertTriangle className="w-12 h-12 text-red-500 mx-auto mb-4" />
        <p className="text-gray-600">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</p>
      </div>
    )
  }

  const categories = ['–í—Å–µ –≤—ã–∑–æ–≤—ã', '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', '–ó–¥–∞–Ω–∏–µ', '–°—É—Ö–æ—Å—Ç–æ–π, –º—É—Å–æ—Ä', '–ë–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—Ä–∞–∂–¥–∞–Ω', '–ü–æ–º–æ—â—å']
  const metrics = getCategoryMetrics(selectedCategory)

  return (
    <div className="space-y-6">
      <div className="flex flex-col space-y-4">
        <div className="flex items-center justify-between">
          <h2 className="text-3xl font-bold">üìä –ê–Ω–∞–ª–∏–∑ –≤—ã–∑–æ–≤–æ–≤ –ø–æ–∂–∞—Ä–Ω–æ–π —Å–ª—É–∂–±—ã</h2>
          <div className="flex items-center space-x-2">
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setShowMethodology(!showMethodology)}
              className="bg-white/90 backdrop-blur-sm rounded-lg p-2 shadow-lg border flex items-center space-x-1"
            >
              <FileText className="w-4 h-4" />
              <span>–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è</span>
            </Button>
            <Badge variant="outline" className="text-sm">
              –í—Å–µ–≥–æ –≤—ã–∑–æ–≤–æ–≤: {data.general.total.toLocaleString()}
            </Badge>
          </div>
        </div>

        {/* –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è */}
        {showMethodology && (
          <Card className="bg-blue-50 border-blue-200">
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Info className="w-5 h-5 text-blue-600" />
                <span>–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –∞–Ω–∞–ª–∏–∑–∞</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-2 text-sm">
                <p>‚Ä¢ –î–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã —É—á–µ—Ç–∞ –≤—ã–∑–æ–≤–æ–≤ –ø–æ–∂–∞—Ä–Ω–æ–π —Å–ª—É–∂–±—ã</p>
                <p>‚Ä¢ –ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞: –ø–æ–ª–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –≥–æ–¥</p>
                <p>‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã –ø–æ —Ç–∏–ø—É –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è</p>
                <p>‚Ä¢ –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º –≤—ã–∑–æ–≤–æ–≤</p>
                <p>‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
              </div>
            </CardContent>
          </Card>
        )}
        
        {/* –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        {metrics && (
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
            <Card>
              <CardContent className="p-4">
                <div className="flex items-center space-x-2">
                  <Flame className="w-5 h-5 text-red-500" />
                  <div>
                    <p className="text-sm text-gray-600">–í—Å–µ–≥–æ –≤—ã–∑–æ–≤–æ–≤</p>
                    <p className="text-2xl font-bold">{metrics.total.toLocaleString()}</p>
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardContent className="p-4">
                <div className="flex items-center space-x-2">
                  <Flame className="w-5 h-5 text-orange-500" />
                  <div>
                    <p className="text-sm text-gray-600">–° –ø–æ–∂–∞—Ä–æ–º</p>
                    <p className="text-2xl font-bold">{metrics.withFire.toLocaleString()}</p>
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardContent className="p-4">
                <div className="flex items-center space-x-2">
                  <Users className="w-5 h-5 text-yellow-500" />
                  <div>
                    <p className="text-sm text-gray-600">–° –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–º–∏</p>
                    <p className="text-2xl font-bold">{metrics.withInjuries.toLocaleString()}</p>
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardContent className="p-4">
                <div className="flex items-center space-x-2">
                  <AlertTriangle className="w-5 h-5 text-red-600" />
                  <div>
                    <p className="text-sm text-gray-600">–° –ø–æ–≥–∏–±—à–∏–º–∏</p>
                    <p className="text-2xl font-bold">{metrics.withDeaths.toLocaleString()}</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {/* –§–∏–ª—å—Ç—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
        <div className="flex flex-wrap gap-2">
          {categories.map((category) => (
            <Button
              key={category}
              variant={selectedCategory === category ? "default" : "outline"}
              size="sm"
              onClick={() => setSelectedCategory(category)}
              className="flex items-center space-x-1"
            >
              {getCategoryIcon(category)}
              <span>{category}</span>
            </Button>
          ))}
        </div>
      </div>

      <Tabs defaultValue="analysis" className="w-full">
        <TabsList className="grid w-full grid-cols-1">
          <TabsTrigger value="analysis">–ê–Ω–∞–ª–∏–∑ –≤—ã–∑–æ–≤–æ–≤</TabsTrigger>
        </TabsList>
        
        <TabsContent value="analysis" className="space-y-6">
          <div className="grid grid-cols-1 gap-6">
            
            {/* –í—Å–µ –≤—ã–∑–æ–≤—ã */}
            {selectedCategory === '–í—Å–µ –≤—ã–∑–æ–≤—ã' && (
              <>
                {/* –ö–∞—Ä—Ç–∞ –≤—Å–µ—Ö –≤—ã–∑–æ–≤–æ–≤ */}
                <Card>
                  <CardHeader>
                    <CardTitle>üó∫Ô∏è –ö–∞—Ä—Ç–∞ –≤—Å–µ—Ö –≤—ã–∑–æ–≤–æ–≤</CardTitle>
                    <CardDescription>–û–±—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã–∑–æ–≤–æ–≤ –ø–æ –≥–æ—Ä–æ–¥—É</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="h-96">
                      <MapComponent 
                        stations={[]} 
                        coverageGrids={[]} 
                        baseCoverageGrids={[]}
                        showCoverageZones={false}
                        selectedScenario="base"
                        selectedDistrict="all"
                        transportIncidents={data.rawData?.transport || []}
                        buildingIncidents={data.rawData?.buildings || []}
                        showTransportIncidents={true}
                        showBuildingIncidents={true}
                      />
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="text-lg">üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</CardTitle>
                    <CardDescription>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∑–æ–≤–æ–≤ –ø–æ —Ç–∏–ø–∞–º</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <ChartContainer config={{}} className="h-80">
                      <ResponsiveContainer width="100%" height="100%">
                        <BarChart data={data.general.byCategory}>
                          <CartesianGrid strokeDasharray="3 3" />
                          <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                          <YAxis />
                          <Tooltip />
                          <Bar dataKey="value" fill={COLORS.fire} />
                        </BarChart>
                      </ResponsiveContainer>
                    </ChartContainer>
                  </CardContent>
                </Card>
              </>
            )}

            {/* –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç */}
            {selectedCategory === '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç' && (
              <>
                {/* KPI –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ */}
                {/*<div className="grid grid-cols-1 lg:grid-cols-4 gap-6 mb-6">
                  <Card>
                    <CardHeader className="pb-3">
                      <CardTitle className="text-lg flex items-center gap-2">
                        <Car className="w-5 h-5 text-blue-600" />
                        –í—Å–µ–≥–æ –≤—ã–∑–æ–≤–æ–≤
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="text-2xl font-bold">{data.transport.total}</div>
                      <div className="text-sm text-muted-foreground">
                        —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
                      </div>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader className="pb-3">
                      <CardTitle className="text-lg flex items-center gap-2">
                        <Flame className="w-5 h-5 text-red-600" />
                        –° –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–µ–º
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="text-2xl font-bold text-red-600">{data.transport.withFire}</div>
                      <div className="text-sm text-muted-foreground">
                        {((data.transport.withFire / data.transport.total) * 100).toFixed(1)}% –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞
                      </div>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader className="pb-3">
                      <CardTitle className="text-lg flex items-center gap-2">
                        <Users className="w-5 h-5 text-orange-600" />
                        –ü–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–µ
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="text-2xl font-bold text-orange-600">{data.transport.withInjuries}</div>
                      <div className="text-sm text-muted-foreground">
                        —á–µ–ª–æ–≤–µ–∫ –ø–æ–ª—É—á–∏–ª–∏ —Ç—Ä–∞–≤–º—ã
                      </div>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader className="pb-3">
                      <CardTitle className="text-lg flex items-center gap-2">
                        <AlertTriangle className="w-5 h-5 text-red-800" />
                        –ü–æ–≥–∏–±–ª–æ
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="text-2xl font-bold text-red-800">{data.transport.withDeaths}</div>
                      <div className="text-sm text-muted-foreground">
                        —Å–º–µ—Ä—Ç–µ–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
                      </div>
                    </CardContent>
                  </Card>
                </div>*/}

                {/* –ö–∞—Ä—Ç–∞ –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ */}
                <Card>
                  <CardHeader>
                    <CardTitle className="text-xl flex items-center gap-2">
                      <MapPin className="w-6 h-6 text-blue-600" />
                      –ö–∞—Ä—Ç–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
                    </CardTitle>
                    <CardDescription>
                      –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å —Ç–æ—á–∫–∞–º–∏ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞. –¶–≤–µ—Ç –º–∞—Ä–∫–µ—Ä–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–∏—á–∏–Ω—ã –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞.
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      {/* Legend */}
                      <div className="flex flex-wrap gap-4 text-sm">
                        <div className="flex items-center gap-2">
                          <div className="w-3 h-3 rounded-full bg-red-500"></div>
                          <span>–ö–æ—Ä–æ—Ç–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-3 h-3 rounded-full bg-orange-500"></div>
                          <span>–î–¢–ü</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-3 h-3 rounded-full bg-yellow-500"></div>
                          <span>–¢–æ–ø–ª–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-3 h-3 rounded-full bg-blue-500"></div>
                          <span>–¢–æ—Ä–º–æ–∑–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-3 h-3 rounded-full bg-gray-500"></div>
                          <span>–ü—Ä–æ—á–∏–µ –ø—Ä–∏—á–∏–Ω—ã</span>
                        </div>
                      </div>
                      
                      {/* Map Container */}
                      <div className="w-full h-[500px] rounded-lg overflow-hidden border">
                        <MapComponent 
                          stations={[]} 
                          coverageGrids={[]} 
                          baseCoverageGrids={[]}
                          showCoverageZones={false}
                          selectedScenario="transport"
                          selectedDistrict="all"
                          transportIncidents={data.rawData?.transport || []}
                          showTransportIncidents={true}
                          buildingIncidents={[]}
                          showBuildingIncidents={false}
                        />
                      </div>
                    </div>
                  </CardContent>
                </Card>

                {/* –ì—Ä–∞—Ñ–∏–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ */}
                <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üöó –¢–∏–ø—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</CardTitle>
                      <CardDescription>–ö–∞–∫–æ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —á–∞—â–µ –≥–æ—Ä–∏—Ç</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.transport.topTypes.slice(0, 10)}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.transport} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üè∑Ô∏è –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–∞—Ä–∫–∏</CardTitle>
                      <CardDescription>–ú–∞—Ä–∫–∏ –∞–≤—Ç–æ –≤ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è—Ö</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.transport.topBrands.slice(0, 10)}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.warning} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üî• –ü—Ä–∏—á–∏–Ω—ã –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–π</CardTitle>
                      <CardDescription>–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø–æ–∂–∞—Ä–æ–≤</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.transport.topCauses.slice(0, 10)}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.fire} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>
                </div>

                {/* –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤ - –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∏ –≤–æ–∑—Ä–∞—Å—Ç */}
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üìÖ –ü–æ –≥–æ–¥—É –≤—ã–ø—É—Å–∫–∞</CardTitle>
                      <CardDescription>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≥–æ–¥–∞–º –≤—ã–ø—É—Å–∫–∞</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.transport.topYears.slice(0, 15)}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.purple} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">‚è±Ô∏è –í–æ–∑—Ä–∞—Å—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</CardTitle>
                      <CardDescription>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –≥—Ä—É–ø–ø–∞–º</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.transport.ageRanges}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={80} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.indigo} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>
                </div>

                <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üöå –ú–∞—Ä—à—Ä—É—Ç—ã –∞–≤—Ç–æ–±—É—Å–æ–≤</CardTitle>
                      <CardDescription>–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.transport.topRoutes.slice(0, 8)}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.success} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üåç –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å</CardTitle>
                      <CardDescription>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∞–º –≥–æ–¥–∞</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <PieChart>
                            <Pie data={data.transport.seasonalData} cx="50%" cy="50%" outerRadius={80} fill="#8884d8" dataKey="value" label={({ name, value }) => `${name}: ${value}`}>
                              {data.transport.seasonalData.map((entry, index) => (
                                <Cell key={`cell-${index}`} fill={Object.values(COLORS)[index % Object.values(COLORS).length]} />
                              ))}
                            </Pie>
                            <Tooltip />
                          </PieChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">‚è∞ –í—Ä–µ–º—è —Å—É—Ç–æ–∫</CardTitle>
                      <CardDescription>–ö–æ–≥–¥–∞ —á–∞—â–µ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –î–¢–ü</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.transport.timeOfDayData}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.info} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üìà –ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</CardTitle>
                      <CardDescription>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —á–∞—Å–∞–º —Å—É—Ç–æ–∫</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <LineChart data={data.transport.hourlyData}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="hour" />
                            <YAxis />
                            <Tooltip />
                            <Line type="monotone" dataKey="value" stroke={COLORS.transport} strokeWidth={2} />
                          </LineChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>
                </div>


              </>
            )}

            {/* –ó–¥–∞–Ω–∏—è */}
            {selectedCategory === '–ó–¥–∞–Ω–∏–µ' && (
              <>
                {/* –ö–∞—Ä—Ç–∞ –¥–ª—è –∑–¥–∞–Ω–∏–π */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <MapPin className="w-5 h-5" />
                      –ö–∞—Ä—Ç–∞ –ø–æ–∂–∞—Ä–æ–≤ –≤ –∑–¥–∞–Ω–∏—è—Ö
                    </CardTitle>
                    <CardDescription>–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–∂–∞—Ä–æ–≤ –≤ –∑–¥–∞–Ω–∏—è—Ö —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –ø–æ —Ç–∏–ø—É</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      {/* –õ–µ–≥–µ–Ω–¥–∞ */}
                      <div className="flex flex-wrap gap-4 p-3 bg-gray-50 rounded-lg">
                        <div className="flex items-center gap-2">
                          <div className="w-4 h-4 bg-blue-500 rounded border-2 border-white" style={{backgroundColor: '#3B82F6'}}></div>
                          <span className="text-sm">–ñ–∏–ª—ã–µ –¥–æ–º–∞</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-4 h-4 bg-green-500 rounded border-2 border-white" style={{backgroundColor: '#10B981'}}></div>
                          <span className="text-sm">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-4 h-4 bg-orange-500 rounded border-2 border-white" style={{backgroundColor: '#F59E0B'}}></div>
                          <span className="text-sm">–¢–æ—Ä–≥–æ–≤—ã–µ</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-4 h-4 bg-red-500 rounded border-2 border-white" style={{backgroundColor: '#EF4444'}}></div>
                          <span className="text-sm">–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-4 h-4 bg-purple-500 rounded border-2 border-white" style={{backgroundColor: '#8B5CF6'}}></div>
                          <span className="text-sm">–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-4 h-4 bg-gray-500 rounded border-2 border-white" style={{backgroundColor: '#6B7280'}}></div>
                          <span className="text-sm">–ü—Ä–æ—á–∏–µ</span>
                        </div>
                      </div>
                      <div className="h-96">
                        <MapComponent 
                          stations={[]} 
                          coverageGrids={[]} 
                          baseCoverageGrids={[]}
                          showCoverageZones={false}
                          selectedScenario="base"
                          selectedDistrict="all"
                          buildingIncidents={data.rawData?.buildings || []}
                          showBuildingIncidents={true}
                        />
                      </div>
                    </div>
                  </CardContent>
                </Card>

                {/* –ì—Ä–∞—Ñ–∏–∫–∏ –∑–¥–∞–Ω–∏–π */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <Card>
                    <CardHeader>
                      <CardTitle>üè¢ –¢–∏–ø—ã –∑–¥–∞–Ω–∏–π</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={transformToChartData(data.buildings.byType).slice(0, 10)}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={80} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.building} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>üî• –ü—Ä–∏—á–∏–Ω—ã –ø–æ–∂–∞—Ä–æ–≤</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={transformToChartData(data.buildings.byCause).slice(0, 10)}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={80} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.fire} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>üèóÔ∏è –≠—Ç–∞–∂–Ω–æ—Å—Ç—å –∑–¥–∞–Ω–∏–π</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={transformToChartData(data.buildings.byFloors)}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.building} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>‚è∞ –í—Ä–µ–º—è —Å—É—Ç–æ–∫</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <PieChart>
                            <Pie
                              data={transformToChartData(data.buildings.timeOfDayData)}
                              cx="50%"
                              cy="50%"
                              innerRadius={60}
                              outerRadius={100}
                              paddingAngle={5}
                              dataKey="value"
                            >
                              {transformToChartData(data.buildings.timeOfDayData).map((entry, index) => (
                                <Cell key={`cell-${index}`} fill={Object.values(COLORS)[index % Object.values(COLORS).length]} />
                              ))}
                            </Pie>
                            <Tooltip />
                          </PieChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>
                </div>
              </>
            )}

            {/* –°—É—Ö–æ—Å—Ç–æ–π, –º—É—Å–æ—Ä */}
            {selectedCategory === '–°—É—Ö–æ—Å—Ç–æ–π, –º—É—Å–æ—Ä' && (
              <>
                {/* –ö–∞—Ä—Ç–∞ –¥–ª—è —Å—É—Ö–æ—Å—Ç–æ—è */}
                <Card>
                  <CardHeader>
                    <CardTitle>üó∫Ô∏è –ö–∞—Ä—Ç–∞ –ø–æ–∂–∞—Ä–æ–≤ —Å—É—Ö–æ—Å—Ç–æ—è –∏ –º—É—Å–æ—Ä–∞</CardTitle>
                    <CardDescription>–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–∂–∞—Ä–æ–≤ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="h-96">
                      <MapComponent 
                        stations={[]} 
                        coverageGrids={[]} 
                        baseCoverageGrids={[]}
                        showCoverageZones={false}
                        selectedScenario="base"
                        selectedDistrict="all"
                        dryGrassIncidents={data.rawData?.dryGrass || []}
                      />
                    </div>
                  </CardContent>
                </Card>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <Card>
                    <CardHeader>
                      <CardTitle>üåø –ß—Ç–æ –≥–æ—Ä–∏—Ç</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.dryGrass.byType}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={80} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.dryGrass} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>üìç –ú–µ—Å—Ç–æ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏—è</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.dryGrass.byLocation}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={80} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.dryGrass} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>üî• –ë—ã–ª–æ –ª–∏ –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–æ –¥–æ –ø—Ä–∏–±—ã—Ç–∏—è</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <PieChart>
                            <Pie
                              data={[
                                { name: '–ù–ï–¢', value: 5676 },
                                { name: '–¥–∞', value: 92 }
                              ]}
                              cx="50%"
                              cy="50%"
                              innerRadius={60}
                              outerRadius={100}
                              paddingAngle={5}
                              dataKey="value"
                            >
                              <Cell fill="#ef4444" />
                              <Cell fill="#22c55e" />
                            </Pie>
                            <Tooltip />
                          </PieChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>
                </div>
              </>
            )}

            {/* –ë–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—Ä–∞–∂–¥–∞–Ω */}
            {selectedCategory === '–ë–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—Ä–∞–∂–¥–∞–Ω' && (
              <>
                {/* –ö–∞—Ä—Ç–∞ –¥–ª—è –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ */}
                <Card>
                  <CardHeader>
                    <CardTitle>üó∫Ô∏è –ö–∞—Ä—Ç–∞ –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤</CardTitle>
                    <CardDescription>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–æ–∂–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤ –ø–æ –≥–æ—Ä–æ–¥—É</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="h-96">
                                             <MapComponent 
                         stations={[]} 
                         coverageGrids={[]} 
                         baseCoverageGrids={[]}
                         showCoverageZones={false}
                         selectedScenario="base"
                         selectedDistrict="all"
                         vigilanceIncidents={data.rawData?.vigilance || []}
                       />
                    </div>
                  </CardContent>
                </Card>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <Card>
                    <CardHeader>
                      <CardTitle>‚ùå –ü—Ä–∏—á–∏–Ω—ã –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={data.unconfirmed.byReason}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={80} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.unconfirmed} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>üìû –ò—Å—Ç–æ—á–Ω–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <PieChart>
                            <Pie
                              data={data.unconfirmed.bySource}
                              cx="50%"
                              cy="50%"
                              innerRadius={60}
                              outerRadius={100}
                              paddingAngle={5}
                              dataKey="value"
                            >
                              {data.unconfirmed.bySource.map((entry, index) => (
                                <Cell key={`cell-${index}`} fill={Object.values(COLORS)[index % Object.values(COLORS).length]} />
                              ))}
                            </Pie>
                            <Tooltip />
                          </PieChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>üîç –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</CardTitle>
                      <CardDescription>–ë—ã–ª–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–∏</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={[
                            { name: '–ß—Ç–æ –≥–æ—Ä–∏—Ç —É–∫–∞–∑–∞–Ω–æ', value: 89 },
                            { name: '–ß—Ç–æ –≥–æ—Ä–∏—Ç –Ω–µ —É–∫–∞–∑–∞–Ω–æ', value: 178 }
                          ]}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.info} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle>üö® –ë—ã–ª–æ –ª–∏ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <PieChart>
                            <Pie
                              data={[
                                { name: '–ù–µ—Ç', value: 201 },
                                { name: '–î–∞', value: 66 }
                              ]}
                              cx="50%"
                              cy="50%"
                              innerRadius={60}
                              outerRadius={100}
                              paddingAngle={5}
                              dataKey="value"
                            >
                              <Cell fill="#ef4444" />
                              <Cell fill="#22c55e" />
                            </Pie>
                            <Tooltip />
                          </PieChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>
                </div>
              </>
            )}

            {/* –ü–æ–º–æ—â—å */}
            {selectedCategory === '–ü–æ–º–æ—â—å' && (
              <>
                {/* –ö–∞—Ä—Ç–∞ –¥–ª—è –ø–æ–º–æ—â–∏ */}
                <Card>
                  <CardHeader>
                    <CardTitle>üó∫Ô∏è –ö–∞—Ä—Ç–∞ –≤—ã–∑–æ–≤–æ–≤ –ø–æ–º–æ—â–∏</CardTitle>
                    <CardDescription>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã–∑–æ–≤–æ–≤ –Ω–∞ –æ–∫–∞–∑–∞–Ω–∏–µ –ø–æ–º–æ—â–∏</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="h-96">
                                             <MapComponent 
                         stations={[]} 
                         coverageGrids={[]} 
                         baseCoverageGrids={[]}
                         showCoverageZones={false}
                         selectedScenario="base"
                         selectedDistrict="all"
                         helpIncidents={data.rawData?.help || []}
                       />
                    </div>
                  </CardContent>
                </Card>

                <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üö® –¢–∏–ø –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞</CardTitle>
                      <CardDescription>–í–∏–¥—ã –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={[
                            { name: "–£—Ç–µ—á–∫–∞ –ì–°–ú", value: 67 },
                            { name: "–î–¢–ü", value: 45 },
                            { name: "–£–≥—Ä–æ–∑–∞ –≤–∑—Ä—ã–≤–∞", value: 23 },
                            { name: "–°–ø–∞—Å–µ–Ω–∏–µ –ª—é–¥–µ–π", value: 21 },
                            { name: "–î—Ä—É–≥–æ–µ", value: 17 }
                          ]}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.success} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">ü§ù –ü–æ–º–æ—â—å –¥—Ä—É–≥–∏—Ö —Å–ª—É–∂–±</CardTitle>
                      <CardDescription>–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ —Å–ª—É–∂–±–∞–º–∏</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={[
                            { name: "–ü–æ–ª–∏—Ü–∏—è", value: 89 },
                            { name: "–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å", value: 67 },
                            { name: "–°–ª—É–∂–±–∞ —Å–ø–∞—Å–µ–Ω–∏—è", value: 45 },
                            { name: "–ì–∞–∑–æ–≤–∞—è —Å–ª—É–∂–±–∞", value: 23 }
                          ]}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.info} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>
                </div>

                <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏</CardTitle>
                      <CardDescription>–ß—Ç–æ –±—ã–ª–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–∞ –º–µ—Å—Ç–µ</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <PieChart>
                            <Pie
                              data={[
                                { name: "–ì–°–ú", value: 67 },
                                { name: "–ì–∞–∑", value: 34 },
                                { name: "–•–∏–º–∏–∫–∞—Ç—ã", value: 23 },
                                { name: "–î—Ä—É–≥–æ–µ", value: 49 }
                              ]}
                              cx="50%" cy="50%" outerRadius={80} fill="#8884d8" dataKey="value" 
                              label={({ name, value }) => `${name}: ${value}`}
                            >
                              {[0, 1, 2, 3].map((entry, index) => (
                                <Cell key={`cell-${index}`} fill={Object.values(COLORS)[index % Object.values(COLORS).length]} />
                              ))}
                            </Pie>
                            <Tooltip />
                          </PieChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üîß –ß—Ç–æ —Å–¥–µ–ª–∞–Ω–æ</CardTitle>
                      <CardDescription>–î–µ–π—Å—Ç–≤–∏—è –ø–æ–∂–∞—Ä–Ω—ã—Ö</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={[
                            { name: "–°–º—ã–≤ –ì–°–ú", value: 45 },
                            { name: "–≠–≤–∞–∫—É–∞—Ü–∏—è", value: 34 },
                            { name: "–í—Å–∫—Ä—ã—Ç–∏–µ –∑–∞–º–∫–æ–≤", value: 29 },
                            { name: "–û—Ç–∫–∞—á–∫–∞ –≤–æ–¥—ã", value: 23 },
                            { name: "–î—Ä—É–≥–æ–µ", value: 42 }
                          ]}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.warning} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader>
                      <CardTitle className="text-lg">üë• –ü–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–µ</CardTitle>
                      <CardDescription>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–º</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ChartContainer config={{}} className="h-64">
                        <ResponsiveContainer width="100%" height="100%">
                          <BarChart data={[
                            { name: "–ë–µ–∑ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö", value: 134 },
                            { name: "1-2 –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö", value: 28 },
                            { name: "3-5 –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö", value: 8 },
                            { name: "–ë–æ–ª–µ–µ 5", value: 3 }
                          ]}>
                            <CartesianGrid strokeDasharray="3 3" />
                            <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                            <YAxis />
                            <Tooltip />
                            <Bar dataKey="value" fill={COLORS.fire} />
                          </BarChart>
                        </ResponsiveContainer>
                      </ChartContainer>
                    </CardContent>
                  </Card>
                </div>
              </>
            )}
          </div>
        </TabsContent>
      </Tabs>
    </div>
  )
} 